@using CBD.Models
@using CBD.Services
@using CBD.Enums
@using CBD.Services.Interfaces;
@using Microsoft.AspNetCore.Identity;
@using X.PagedList
@using X.PagedList.Mvc.Core
@using X.PagedList.Web.Common



@inject UserManager<CBDUser> userManager
@inject IImageService imageService

@model IPagedList<Build>



    <div class="text-center">
        <a class="btn btn-dark btn-sm note-btn-block mb-2" asp-action="ImportJSON" asp-controller="Builds">Import New Build</a>
    </div>





<div class="row">
    @foreach (var build in Model)
    {
        //Is the logged in user the owner of this build??
        var isOwner = false;
        if (User.Identity.IsAuthenticated)
        {
            isOwner = User.IsInRole(CBDRole.Administrator.ToString());
            isOwner = isOwner && (build.CBDUserId == userManager.GetUserId(User));
        }

        <div class="col-sm-2 col-lg-4">
            <div class="card border-dark">
                <div class="card-body text-center">
                    <div class="bg-warning">
                        <hr class="card-hr" />
                        <h5 class="card-title">@build.Name</h5>
                        <hr class="card-hr" />
                    </div>
                    <div>
                        <p class="card-text">@build.Comment</p>
                    </div>

                    <br />
                    <div class="text-center">
                        <a class="btn btn-dark btn-sm btn-block mb-2" asp-action="Details" asp-controller="Builds" asp-route-id="@build.Id">View Build</a>
                    </div>

                    @if (User.IsInRole(CBDRole.Administrator.ToString()) || isOwner)
                    {
                        <div class="text-center">
                            <a class="btn btn-success btn-sm btn-block border-dark" asp-action="Edit" asp-controller="Builds" asp-route-id="@build.Id">Edit Description</a>
                        </div>
                    }
                </div>
                @*<img class="card-img-bottom" src="@imageService.ConveryByteArrayToFile(build.ImageData?, build.ContentType)" />*@
            </div>

        </div>
    }
</div>

<hr />

<div class="row">
    <div class="col h3">
        Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount
    </div>
</div>
<div class="row">
    <div class="col">
        @Html.PagedListPager(Model, page => Url.Action("Index", new{  page = page }),
        new PagedListRenderOptions
        {
        LiElementClasses = new string[] { "page-item" },
        PageClasses = new string[] { "page-link" }
        })
    </div>
</div>