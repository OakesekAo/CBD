@using System.Text;
@using CBD.Enums
@using CBD.Models
@model Build

<div class="container mt-4">
    <div class="row">
        <div class="col">
            <h1>
                Name: @Model.Name
            </h1>
            <h3>Class: @Model.ClassDisplay</h3>
            <p>Comment: @Model.Comment</p>
        </div>
        <div class="col ">
            <!-- ... (other HTML content) ... -->

            <a type="button" class="btn btn-primary text-center" href="data:application/json;base64,@Convert.ToBase64String(Encoding.UTF8.GetBytes(Model.RawJson))" download="@($"{Model.Class}_{Model.Name.Replace(" ", "_")}.mbd")">Download Build</a>

            <p>Mids Build Version: @Model.BuiltWith.Version</p>
        </div>
    </div>



    <div class="row mt-4">
        <div class="col col-md-3">
            <h2 class="card-title">Primary Powers</h2>
            @foreach (var powerSet in Model.PowerSets.Where(ps => ps.Type == CBD.Enums.PowerSetType.Primary && !string.IsNullOrEmpty(ps.Name)))
            {
                <div class="card my-2">
                    <div class="card-subtitle">
                        <h4 class="mb-0">
                            @powerSet.NameDisplay
                        </h4>
                    </div>

                    <div id="powerSet@powerSet">
                        <div class="card-text">
                            @foreach (var powerEntry in Model.PowerEntries.Where(pe => pe.PowerSetType == CBD.Enums.PowerSetType.Primary && !string.IsNullOrEmpty(pe.PowerName)))
                            {
                                <div class="col mt-2">
                                    <div class="bg-primary p-1 rounded border border-dark-subtle border-3">
                                        <div class="text-left mb-1">
                                            <h2 class="h5">@powerEntry.Level - @powerEntry.PowerNameDisplay</h2>
                                        </div>
                                        <div class="d-flex justify-content-left">
                                            @foreach (var slotEntry in powerEntry.SlotEntries)
                                            {
                                                <div class="rounded-circle bg-dark border border-warning border-3" data-bs-toggle="popover" data-bs-placement="bottom" data-bs-content="@slotEntry.Enhancement?.EnhancementName" style="width: 40px; height: 40px;"></div>

                                            }
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            }
        </div>
        <div class="col col-md-3">
            <h2 class="card-title">Secondary Powers</h2>
            @foreach (var powerSet in Model.PowerSets.Where(ps => ps.Type == CBD.Enums.PowerSetType.Secondary && !string.IsNullOrEmpty(ps.Name)))
            {
                <div class="card my-2">
                    <div class="card-subtitle">
                        <h4 class="mb-0">
                            @powerSet.NameDisplay
                        </h4>
                    </div>

                    <div id="powerSet@powerSet">
                        <div class="card-body">
                            @foreach (var powerEntry in Model.PowerEntries.Where(pe => pe.PowerSetType == CBD.Enums.PowerSetType.Secondary && !string.IsNullOrEmpty(pe.PowerName)))
                            {
                                <div class="col mt-2">
                                    <div class="bg-primary p-1 rounded border border-dark-subtle border-3">
                                        <div class="text-left mb-1">
                                            <h2 class="h5">@powerEntry.Level - @powerEntry.PowerNameDisplay</h2>
                                        </div>
                                        <div class="d-flex justify-content-left">
                                            @foreach (var slotEntry in powerEntry.SlotEntries)
                                            {
                                                <div class="rounded-circle bg-dark border border-warning border-3" data-bs-toggle="popover" data-bs-placement="bottom" data-bs-content="@slotEntry.Enhancement?.EnhancementName" style="width: 40px; height: 40px;"></div>

                                            }
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            }
        </div>
        <div class="col col-md-3">
            <h2 class="card-title">Mastery/Epic Powers</h2>
            <div class="row mt-4">
                <div class="col">
                    @foreach (var powerSet in Model.PowerSets.Where(ps => ps.Type == CBD.Enums.PowerSetType.Epic && !string.IsNullOrEmpty(ps.Name)))
                    {
                        <div class="card my-2">
                            <div class="card-subtitle">
                                <h4 class="mb-0">
                                    @powerSet.NameDisplay
                                </h4>
                            </div>

                            <div id="powerSet@powerSet">
                                <div class="card-body">
                                    @foreach (var powerEntry in Model.PowerEntries.Where(pe => pe.PowerSetType == CBD.Enums.PowerSetType.Epic && !string.IsNullOrEmpty(pe.PowerName)))
                                    {
                                        <div class="col mt-2">
                                            <div class="bg-primary p-1 rounded border border-dark-subtle border-3">
                                                <div class="text-left mb-1">
                                                    <h2 class="h5">@powerEntry.Level - @powerEntry.PowerNameDisplay</h2>
                                                </div>
                                                <div class="d-flex justify-content-left">
                                                    @foreach (var slotEntry in powerEntry.SlotEntries)
                                                    {
                                                        <div class="rounded-circle bg-dark border border-warning border-3" data-bs-toggle="popover" data-bs-placement="bottom" data-bs-content="@slotEntry.Enhancement?.EnhancementName" style="width: 40px; height: 40px;"></div>

                                                    }
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>

            <h2 class="card-title">Pool Powers</h2>
            <div class="row mt-4">
                <div class="col">
                    @foreach (var powerSetGroup in Model.PowerSets.Where(ps => ps.Type == CBD.Enums.PowerSetType.Pool && !string.IsNullOrEmpty(ps.Name))
                    .GroupBy(ps => ps.Name.Split('.')[1]))
                    {
                        <div class="card my-2">
                            <div class="card-subtitle">
                                <h4 class="mb-0">
                                    @powerSetGroup.Key
                                </h4>
                            </div>

                            <div id="powerSetGroup@powerSetGroup.Key">
                                <div class="card-body">
                                    @foreach (var powerSet in powerSetGroup)
                                    {
                                        foreach (var powerEntry in Model.PowerEntries.Where(pe => pe.PowerSetType == CBD.Enums.PowerSetType.Pool && !string.IsNullOrEmpty(pe.PowerName)))
                                        {
                                            if (powerEntry.PowerName.StartsWith(powerSet.Name))
                                            {
                                                <div class="col mt-2">
                                                    <div class="bg-primary p-1 rounded border border-dark-subtle border-3">
                                                        <div class="text-left mb-1">
                                                            <h2 class="h5">@powerEntry.Level - @powerEntry.PowerNameDisplay</h2>
                                                        </div>
                                                        <div class="d-flex justify-content-left">
                                                            @foreach (var slotEntry in powerEntry.SlotEntries)
                                                            {
                                                                <div class="rounded-circle bg-dark border border-warning border-3" data-bs-toggle="popover" data-bs-placement="bottom" data-bs-content="@slotEntry.Enhancement?.EnhancementName" style="width: 40px; height: 40px;"></div>

                                                            }
                                                        </div>
                                                    </div>
                                                </div>
                                            }
                                        }
                                    }
                                </div>
                            </div>
                        </div>
                    }

                </div>
            </div>

            <h2 class="card-title">Inherent Powers</h2>
            <div class="row mt-4">
                <div class="col">
                    @foreach (var powerGroup in Model.PowerEntries.Where(pe => pe.PowerSetType == CBD.Enums.PowerSetType.Inherent && !string.IsNullOrEmpty(pe.PowerName))
                    .GroupBy(pe => pe.PowerName.Split('.')[1]))
                    {
                        <div class="card my-2">
                            <div class="card-subtitle">
                                <h4 class="mb-0">
                                    @powerGroup.Key
                                </h4>
                            </div>

                            <div id="powerGroup@powerGroup.Key">
                                <div class="card-body">
                                    @foreach (var power in powerGroup)
                                    {
                                        <div class="col mt-2">
                                            <div class="bg-primary p-1 rounded border border-dark-subtle border-3">
                                                <div class="text-left mb-1">
                                                    <h2 class="h5">@power.Level - @power.PowerNameDisplay</h2>
                                                </div>
                                                <div class="d-flex justify-content-left">
                                                    @foreach (var slotEntry in power.SlotEntries)
                                                    {
                                                        <div class="rounded-circle bg-dark border border-warning border-3" data-bs-toggle="popover" data-bs-placement="bottom" data-bs-content="@slotEntry.Enhancement?.EnhancementName" style="width: 40px; height: 40px;"></div>

                                                    }
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>

        </div>
    </div>


</div>



@section Scripts {

}
