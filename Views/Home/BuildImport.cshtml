@using System.Text;
@using CBD.Enums
@using CBD.Models
@model Build

<div class="container mt-4">
    <h1>Character Build Data</h1>
    <p>App: @Model.BuiltWith.App</p>
    <p>Version: @Model.BuiltWith.Version</p>
    <p>Class: @Model.ClassDisplay</p>
    <p>Name: @Model.Name</p>
    <p>Comment: @Model.Comment</p>


    <!-- ... (other HTML content) ... -->

    <a href="data:application/json;base64,@Convert.ToBase64String(Encoding.UTF8.GetBytes(Model.RawJson))" download="@($"{Model.Class}_{Model.Name.Replace(" ", "_")}.mbd")">Download Build</a>

    <div class="row mt-4">
        <div class="col-4">
            <h2>Primary Powers</h2>
            @foreach (var powerSet in Model.PowerSets.Where(ps => ps.Type == CBD.Enums.PowerSetType.Primary))
            {
                <div class="card my-2">
                    <div class="card-header">
                        <h5 class="mb-0">
                            <button class="btn btn-link" data-bs-toggle="collapse" data-bs-target="#powerSet@powerSet">
                                @powerSet.NameDisplay
                            </button>
                        </h5>
                    </div>

                    <div id="powerSet@powerSet" class="collapse">
                        <div class="card-body">
                            @foreach (var powerEntry in Model.PowerEntries.Where(pe => pe.PowerSetType == CBD.Enums.PowerSetType.Primary))
                            {
                                <div class="card my-2">
                                    <div class="card-header">
                                        <h5 class="mb-0">
                                            <button class="btn btn-link" data-bs-toggle="collapse" data-bs-target="#powerEntry@powerEntry.PowerName">
                                                @powerEntry.PowerNameDisplay
                                            </button>
                                        </h5>
                                    </div>

                                    <div id="powerEntry@powerEntry.PowerName" class="collapse">
                                        <div class="card-body">
                                            <p class="level">Power Placed at Level: @powerEntry.Level</p>
                                            <p class="stat-include">Stat Include: @powerEntry.StatInclude</p>
                                            <!-- Add other properties as needed -->
                                            <button class="btn btn-secondary show-slots-btn" data-bs-toggle="collapse" data-bs-target="#slots@powerEntry.PowerName">Show Slots</button>
                                            <div id="slots@powerEntry.PowerName" class="collapse">
                                                <ul class="list-group">
                                                    @foreach (var slotEntry in powerEntry.SlotEntries)
                                                    {
                                                        <li class="list-group-item text-sm-center"> @slotEntry.Enhancement?.EnhancementName</li>
                                                    }
                                                </ul>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            }
        </div>
        <div class="col-4">
            <h2>Secondary Powers</h2>
            @foreach (var powerSet in Model.PowerSets.Where(ps => ps.Type == CBD.Enums.PowerSetType.Secondary))
            {
                <div class="card my-2">
                    <div class="card-header">
                        <h5 class="mb-0">
                            <button class="btn btn-link" data-bs-toggle="collapse" data-bs-target="#powerSet@powerSet">
                                @powerSet.NameDisplay
                            </button>
                        </h5>
                    </div>

                    <div id="powerSet@powerSet" class="collapse">
                        <div class="card-body">
                            @foreach (var powerEntry in Model.PowerEntries.Where(pe => pe.PowerSetType == CBD.Enums.PowerSetType.Secondary))
                            {
                                <div class="card my-2">
                                    <div class="card-header">
                                        <h5 class="mb-0">
                                            <button class="btn btn-link" data-bs-toggle="collapse" data-bs-target="#powerEntry@powerEntry.PowerName">
                                                @powerEntry.PowerNameDisplay
                                            </button>
                                        </h5>
                                    </div>

                                    <div id="powerEntry@powerEntry.PowerName" class="collapse">
                                        <div class="card-body">
                                            <p class="level">Power Placed at Level: @powerEntry.Level</p>
                                            <p class="stat-include">Stat Include: @powerEntry.StatInclude</p>
                                            <!-- Add other properties as needed -->
                                            <button class="btn btn-secondary show-slots-btn" data-bs-toggle="collapse" data-bs-target="#slots@powerEntry.PowerName">Show Slots</button>
                                            <div id="slots@powerEntry.PowerName" class="collapse">
                                                <ul class="list-group">
                                                    @foreach (var slotEntry in powerEntry.SlotEntries)
                                                    {
                                                        <li class="list-group-item text-sm-center"> @slotEntry.Enhancement?.EnhancementName</li>
                                                    }
                                                </ul>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
            }
        </div>
        <div class="col-4">
            <h2>Mastery/Epic Powers</h2>
            <div class="row mt-4">
                <div class="col">
                    @foreach (var powerSet in Model.PowerSets.Where(ps => ps.Type == CBD.Enums.PowerSetType.Epic))
                    {
                        <div class="card my-2">
                            <div class="card-header">
                                <h5 class="mb-0">
                                    <button class="btn btn-link" data-bs-toggle="collapse" data-bs-target="#powerSet@powerSet">
                                        @powerSet.NameDisplay
                                    </button>
                                </h5>
                            </div>

                            <div id="powerSet@powerSet" class="collapse">
                                <div class="card-body">
                                    @foreach (var powerEntry in Model.PowerEntries.Where(pe => pe.PowerSetType == CBD.Enums.PowerSetType.Epic))
                                    {
                                        <div class="card my-2">
                                            <div class="card-header">
                                                <h5 class="mb-0">
                                                    <button class="btn btn-link" data-bs-toggle="collapse" data-bs-target="#powerEntry@powerEntry.PowerName">
                                                        @powerEntry.PowerNameDisplay
                                                    </button>
                                                </h5>
                                            </div>

                                            <div id="powerEntry@powerEntry.PowerName" class="collapse">
                                                <div class="card-body">
                                                    <p class="level">Power Placed at Level: @powerEntry.Level</p>
                                                    <p class="stat-include">Stat Include: @powerEntry.StatInclude</p>
                                                    <!-- Add other properties as needed -->
                                                    <button class="btn btn-secondary show-slots-btn" data-bs-toggle="collapse" data-bs-target="#slots@powerEntry.PowerName">Show Slots</button>
                                                    <div id="slots@powerEntry.PowerName" class="collapse">
                                                        <ul class="list-group">
                                                            @foreach (var slotEntry in powerEntry.SlotEntries)
                                                            {
                                                                <li class="list-group-item text-sm-center"> @slotEntry.Enhancement?.EnhancementName</li>
                                                            }
                                                        </ul>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>

            <h2>Pool Powers</h2>
            <div class="row mt-4">
                <div class="col">
                    @foreach (var powerSetGroup in Model.PowerSets.Where(ps => ps.Type == CBD.Enums.PowerSetType.Pool)
                    .GroupBy(ps => ps.Name.Split('.')[1]))
                    {
                        <div class="card my-2">
                            <div class="card-header">
                                <h5 class="mb-0">
                                    <button class="btn btn-link" data-bs-toggle="collapse" data-bs-target="#powerSetGroup@powerSetGroup.Key">
                                        @powerSetGroup.Key
                                    </button>
                                </h5>
                            </div>

                            <div id="powerSetGroup@powerSetGroup.Key" class="collapse">
                                <div class="card-body">
                                    @foreach (var powerSet in powerSetGroup)
                                    {
                                        foreach (var powerEntry in Model.PowerEntries.Where(pe => pe.PowerSetType == CBD.Enums.PowerSetType.Pool))
                                        {
                                            if (powerEntry.PowerName.StartsWith(powerSet.Name))
                                            {
                                                <div class="card my-2">
                                                    <div class="card-header">
                                                        <h5 class="mb-0">
                                                            <button class="btn btn-link" data-bs-toggle="collapse" data-bs-target="#powerEntry@powerEntry.PowerName">
                                                                @powerEntry.PowerNameDisplay
                                                            </button>
                                                        </h5>
                                                    </div>

                                                    <div id="powerEntry@powerEntry.PowerName" class="collapse">
                                                        <div class="card-body">
                                                            <p class="level">Power Placed at Level: @powerEntry.Level</p>
                                                            <p class="stat-include">Stat Include: @powerEntry.StatInclude</p>
                                                            <!-- Add other properties as needed -->
                                                            <button class="btn btn-secondary show-slots-btn" data-bs-toggle="collapse" data-bs-target="#slots@powerEntry.PowerName">Show Slots</button>
                                                            <div id="slots@powerEntry.PowerName" class="collapse">
                                                                <ul class="list-group">
                                                                    @foreach (var slotEntry in powerEntry.SlotEntries)
                                                                    {
                                                                        <li class="list-group-item text-sm-center">
                                                                            @slotEntry.Enhancement?.EnhancementName
                                                                        </li>
                                                                    }
                                                                </ul>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            }
                                        }
                                    }
                                </div>
                            </div>
                        </div>
                    }

                </div>
            </div>

            <h2>Inherent Powers</h2>
            <div class="row mt-4">
                <div class="col">
                    @foreach (var powerGroup in Model.PowerEntries.Where(pe => pe.PowerSetType == CBD.Enums.PowerSetType.Inherent)
                    .GroupBy(pe => pe.PowerName.Split('.')[1]))
                    {
                        <div class="card my-2">
                            <div class="card-header">
                                <h5 class="mb-0">
                                    <button class="btn btn-link" data-bs-toggle="collapse" data-bs-target="#powerGroup@powerGroup.Key">
                                        @powerGroup.Key
                                    </button>
                                </h5>
                            </div>

                            <div id="powerGroup@powerGroup.Key" class="collapse">
                                <div class="card-body">
                                    @foreach (var power in powerGroup)
                                    {
                                        <div class="card my-2">
                                            <div class="card-header">
                                                <h5 class="mb-0">
                                                    @power.PowerNameDisplay
                                                </h5>
                                            </div>

                                            <div class="card-body">
                                                <p>Power Name: @power.PowerName</p>
                                                <p>Power Set Type: @power.PowerSetType</p>
                                                <button class="btn btn-secondary show-slots-btn" data-bs-toggle="collapse" data-bs-target="#slots@powerEntry.PowerName">Show Slots</button>
                                                <div id="slots@powerEntry.PowerName" class="collapse">
                                                    <ul class="list-group">
                                                        @foreach (var slotEntry in power.SlotEntries)
                                                        {
                                                            <li class="list-group-item text-sm-center">
                                                                @slotEntry.Enhancement?.EnhancementName
                                                            </li>
                                                        }
                                                    </ul>
                                                </div>
                                            </div>
                                        </div>
                                    }
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>

        </div>
    </div>


</div>



@section Scripts {

}
